{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport {routing} from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport {ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\n\n\nconst routes: Routes = [\n  {\n    // no url -> direct to problems page\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    // unrecognised path -> direct to problems\n    path: '**',\n    redirectTo: 'problems'\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"@media screen {\\n  #editor {\\n    height: 600px;\\n  }\\n  .lang-select {\\n    width: 100px;\\n    margin-right: 10px;\\n  }\\n  header .btn {\\n    margin: 0 5px;\\n  }\\n  footer .btn {\\n    margin: 0 5px;\\n  }\\n  .editor-footer, .editor-header {\\n    margin: 10px 0;\\n  }\\n  .cursor {\\n    /*position:absolute;*/\\n    background: rgba(0, 250, 0, 0.5);\\n    z-index: 40;\\n    width: 2px!important\\n  }\\n}\\n\"","module.exports = \"<div id=\\\"editor\\\"></div>\\n\"","import { Component, OnInit } from '@angular/core';\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  editor:any;\n  defaultContent = {\n    'Java': `public class Example {\n        public static void main(String[] args) {\n        // Type your Java code here\n        }\n        }\n        `,\n    'Python': `class Solution:\n        def example():\n        # write your Python code here`\n  }\n  constructor() { }\n\n  ngOnInit() {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.editor.getSession().setMode(\"ace/mode/java\");\n    this.editor.setValue(this.defaultContent['Java']);\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <!--[(ngModel)] TWO WAY BINDING-->\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n             name=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n             [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n             name=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n             [(ngModel)]=\\\"newProblem.desc\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n              [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\"\\n                [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n                (click)=\\\"addProblem()\\\">Add problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<br/>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze(\n  {id: 0, name: '', desc: '', difficulty: 'easy'\n})\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  // inject data service\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n  addProblem() {\n    // assign newProblem a new problem instance\n    // Otherwise newProblem have same reference as the one we added to\n    // the list\n    this.dataService.addProblem(this.newProblem);\n    // then when next time add new problem, it will override the\n    // problem we have already add into the problem list.\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-sm-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n        <app-editor></app-editor>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n    problem: Problem;\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      //this.problem = this.dataService.getProblem(+params['id']);\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem)\n    });\n  }\n\n}\n","module.exports = \".difficult {\\n  min-width: 65px;\\n  margin-right: 18px;\\n}\\n.badge.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n.diff-super{\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\"\\n      [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n        {{problem.difficulty}}\\n      </span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}\\n      </strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Problem } from '../../models/problem.model';\nimport { DataService} from '../../services/data.service';\n\n/*\nconst PROBLEMS: Problem[] = [\n  {\n  'id': 1,\n  'name': 'Two Sum',\n  'desc': 'Given an array of integers, find two numbers such ' +\n  'that they add up to a specific target number.\\n\\nThe function twoSum ' +\n  'should return indices of the two numbers such that they add up to the target, ' +\n  'where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are NOT zero-based.',\n  'difficulty': 'easy'\n},\n{\n  'id': 2,\n  'name': '3Sum',\n  'desc': 'Given an array S of n integers, are there elements a, b, ' +\n  'c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.',\n  'difficulty': 'medium'\n},\n{\n  'id': 3,\n  'name': '4Sum',\n  'desc': 'Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d =' +\n  ' target?\\n\\nFind all unique quadruplets in the array which gives the sum of target.',\n  'difficulty': 'medium'\n},\n{\n  'id': 4,\n  'name': 'Triangle Count',\n  'desc': 'Given an array of integers, how many three numbers can be found in the array, so that we ' +\n  'can build an triangle whose three edges length is the three numbers that we find?',\n  'difficulty': 'hard'},\n{\n  'id': 5,\n  'name': 'Sliding Window Maximum',\n  'desc': 'Given an array of n integer with duplicate number, and a moving window(size k), ' +\n  'move the window at each iteration from the start of the array, find the maximum number inside the window at each moving.',\n  'difficulty': 'super'\n}];\n*/\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n  problems: Problem[];\n  subscriptionProblems: Subscription;//cost memory\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n    // this.problems = this.dataService.getProblems();\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => this.problems = problems);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\nimport {Problem } from '../models/problem.model';\nimport {error} from \"selenium-webdriver\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n    //problems: Problem[] = PROBLEMS;\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n  constructor(private httpClient: HttpClient) { }\n  // getProblems(): Problem[]  {\n  //   return this.problems;\n  // }\n  // getProblem(id: number): Problem {\n  //   return this.problems.find((problem) => problem.id === id);\n  // }\n  // addProblem(problem: Problem) {\n  //   // assign problem id\n  //   problem.id = this.problems.length + 1;\n  //   // add to the end of problem list\n  //   this.problems.push(problem);\n  // }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        // .next: next data\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number) : Promise<Problem> {\n    //httpClient return Observable type, toPromise converts to Promise\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res:any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem){\n    const options = {headers: new HttpHeaders( {'Content-Type': 'application/json'})};\n    return this.httpClient.post('api/vi/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise <any> {\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}